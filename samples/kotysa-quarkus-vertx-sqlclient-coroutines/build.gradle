plugins {
    id 'org.jetbrains.kotlin.jvm'
    id "org.jetbrains.kotlin.plugin.allopen"
    id 'io.quarkus'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(enforcedPlatform("io.quarkus.platform:quarkus-bom:$quarkusVersion"))
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
    implementation('io.quarkus:quarkus-kotlin')
    implementation('io.quarkus:quarkus-arc')
    implementation('io.quarkus:quarkus-resteasy-reactive')
    implementation('io.quarkus:quarkus-resteasy-reactive-jackson')
    implementation('io.quarkus:quarkus-reactive-pg-client')
    implementation('io.vertx:vertx-lang-kotlin-coroutines')
    implementation("org.ufoss.kotysa:kotysa-vertx-sqlclient:${kotysaVersion}")

    testImplementation('io.quarkus:quarkus-junit5')
    testImplementation('io.rest-assured:rest-assured')
    testImplementation('io.rest-assured:kotlin-extensions')
    testImplementation('org.jetbrains.kotlinx:kotlinx-coroutines-test')
}

allOpen {
    annotation("jakarta.ws.rs.Path")
    annotation("jakarta.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

compileJava {
    // replace '-' with '.' to match JPMS jigsaw module name
    def jpmsName = project.name.replace('-', '.')
    // this is needed because we have a separate compile step in this example with th
    //  'module-info.java' is in 'main/java' and the Kotlin code is in 'main/kotlin'
    options.compilerArgs = [
//            "--module-path",
//            compileJava.classpath.asPath,   
"--patch-module",
"$jpmsName=${sourceSets.main.output.asPath}"
    ]
}

wrapper {
    gradleVersion = '8.3'
    distributionType = Wrapper.DistributionType.ALL
}
