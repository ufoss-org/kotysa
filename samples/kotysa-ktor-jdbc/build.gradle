plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

mainClassName = "com.sample.ApplicationKt"

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(enforcedPlatform("io.ktor:ktor-bom:$ktor_version"))
    implementation('io.ktor:ktor-server-core')
    implementation('io.ktor:ktor-server-netty')
    implementation('io.ktor:ktor-server-content-negotiation')
    implementation('io.ktor:ktor-serialization-kotlinx-json')
    implementation("ch.qos.logback:logback-classic:$logback_version")
    implementation("org.kodein.di:kodein-di-framework-ktor-server-jvm:$kodein_di_ktor_version") // kodein for ktor
    implementation("org.jetbrains.kotlinx:kotlinx-datetime:$kotlinx_datetime_version")
    implementation("org.ufoss.kotysa:kotysa-jdbc:$kotysa_version")
    implementation("com.h2database:h2:$h2_version") // JDBC driver for H2

    testImplementation('io.ktor:ktor-server-tests')
    testImplementation('io.ktor:ktor-client-content-negotiation')
    testImplementation("io.kotest:kotest-runner-junit5:$kotest_version")
    testImplementation("io.kotest:kotest-assertions-core:$kotest_version")
    testImplementation("io.kotest.extensions:kotest-assertions-ktor:$kotest_assertions_ktor_version")
}

compileJava {
    // replace '-' with '.' to match JPMS jigsaw module name
    def jpmsName = project.name.replace('-', '.')
    // this is needed because we have a separate compile step in this example with th
    //  'module-info.java' is in 'main/java' and the Kotlin code is in 'main/kotlin'
    options.compilerArgs = [
//            "--module-path",
//            compileJava.classpath.asPath,   
        "--patch-module",
        "$jpmsName=${sourceSets.main.output.asPath}"
    ]
}

test {
    useJUnitPlatform()
}

wrapper {
    gradleVersion = '8.1.1'
    distributionType = Wrapper.DistributionType.ALL
}
