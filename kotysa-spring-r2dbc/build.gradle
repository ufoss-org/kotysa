dependencies {
    api project(':kotysa-core')

    // import BOMs
    testImplementation platform("org.testcontainers:testcontainers-bom:$testcontainers_bom_version")
    testImplementation platform("org.springframework.boot:spring-boot-dependencies:$spring_boot_version")

    api "io.projectreactor.kotlin:reactor-kotlin-extensions:$reactor_kotlin_extension_version"

    implementation "org.springframework:spring-r2dbc:$spring_core_version"
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    compileOnly "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    compileOnly "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:$kotlinx_coroutines_version"
    compileOnly "org.jetbrains.kotlinx:kotlinx-datetime:$kotlinx_datetime_version"

    testImplementation testFixtures(project(':kotysa-core'))

    testImplementation "org.springframework.fu:spring-fu-kofu:$spring_fu_version"
    testImplementation 'org.springframework:spring-r2dbc'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:$kotlinx_coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-datetime:$kotlinx_datetime_version"
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.testcontainers:testcontainers'

    testRuntimeOnly 'io.r2dbc:r2dbc-h2'
    testRuntimeOnly 'io.r2dbc:r2dbc-postgresql'
    testRuntimeOnly 'dev.miku:r2dbc-mysql'
//    testRuntimeOnly "com.github.jasync-sql:jasync-r2dbc-mysql:$jasync_r2dbc_version"
    testRuntimeOnly 'io.r2dbc:r2dbc-mssql'
    testRuntimeOnly 'org.mariadb:r2dbc-mariadb'
    testRuntimeOnly "com.oracle.database.r2dbc:oracle-r2dbc:$r2dbc_oracle_version"
    
    testRuntimeOnly 'org.testcontainers:postgresql'
    testRuntimeOnly 'org.testcontainers:mysql'
    // needed to start mysql testcontainer
    testRuntimeOnly 'mysql:mysql-connector-java'
    testRuntimeOnly 'org.testcontainers:mssqlserver'
    // needed to start mssql testcontainer
    testRuntimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
    // needed to start mariadb testcontainer
    testRuntimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    testRuntimeOnly 'org.testcontainers:oracle-xe'
    // needed to start oracle-xe testcontainer
    testRuntimeOnly "com.oracle.database.jdbc:ojdbc11:$oracle_version"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict', '-Xjvm-default=all-compatibility', '-Xexplicit-api=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict', '-Xjvm-default=all-compatibility']
        jvmTarget = '1.8'
    }
}

test {
    useJUnitPlatform {
        // for jasync
//        excludeTags 'miku'

        // for miku
        excludeTags 'jasync'
    }
}

tasks.dokkaHtmlPartial.configure {
    dokkaSourceSets {
        configureEach {
            externalDocumentationLink {
                url = URL("https://docs.spring.io/spring-data/r2dbc/docs/1.4.x/api/")
            }
        }
    }
}
