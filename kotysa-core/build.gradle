import org.jetbrains.kotlin.config.KotlinCompilerVersion

plugins {
    id 'java-test-fixtures'
}

println("Using Gradle version: $gradle.gradleVersion")
println("Using Kotlin compiler version: $KotlinCompilerVersion.VERSION")
println("Using Java compiler version: ${JavaVersion.current()}")

dependencies {
    api "org.ufoss.kolog:kolog:$kolog_version"

    // import BOMs
    testFixturesImplementation platform("org.springframework.boot:spring-boot-dependencies:$spring_boot_version")
    testFixturesImplementation platform("org.testcontainers:testcontainers-bom:$testcontainers_bom_version")

    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    compileOnly "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    compileOnly "org.jetbrains.kotlinx:kotlinx-datetime:$kotlinx_datetime_version"

    testFixturesImplementation "com.google.code.findbugs:jsr305:$jsr305_version"
    testFixturesImplementation "org.springframework:spring-core"
    testFixturesImplementation "org.jetbrains.kotlinx:kotlinx-datetime:$kotlinx_datetime_version"
    testFixturesImplementation 'org.junit.jupiter:junit-jupiter-api'
    testFixturesImplementation "org.assertj:assertj-core:$assertj_version"
    testFixturesImplementation 'org.testcontainers:postgresql'
    testFixturesImplementation 'org.testcontainers:mysql'
    testFixturesImplementation 'org.testcontainers:mssqlserver'

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation "org.jetbrains.kotlinx:kotlinx-datetime:$kotlinx_datetime_version"

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjvm-default=enable', '-Xexplicit-api=strict', '-Xopt-in=kotlin.experimental.ExperimentalTypeInference']
        jvmTarget = '1.8'
    }
}

compileTestFixturesKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjvm-default=enable']
        jvmTarget = '1.8'
    }
}
